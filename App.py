from flask import Flask, request, jsonify, render_template, send_from_directory
import os
import subprocess

app = Flask(__name__, template_folder="templates")  # Set the templates folder

UPLOAD_FOLDER = "uploads"
OUTPUT_FOLDER = "outputs"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
os.makedirs(OUTPUT_FOLDER, exist_ok=True)

@app.route('/')
def index():
    return render_template('Home.html')  # Renders Home.html from the templates folder

if __name__ == "__main__":
    app.run(debug=True)

@app.route("/process-audio", methods=["POST"])
def process_audio():
    if "audio" not in request.files:
        return jsonify({"message": "No audio file uploaded"}), 400

    # Save the uploaded audio file
    audio_file = request.files["audio"]
    file_path = os.path.join(UPLOAD_FOLDER, audio_file.filename)
    audio_file.save(file_path)

    # Call the ML model for processing the uploaded audio file
    try:
        # Path to the model script
        model_script_path = "separation.py"

        # Command to run the ML model
        command = f"python {model_script_path} --checkpoint path_to_checkpoint --mix-scp {file_path} --dump-dir {OUTPUT_FOLDER}"
        
        # Execute the model processing command
        subprocess.run(command, shell=True, check=True)

        # Check the outputs folder for processed audio files
        output_files = os.listdir(OUTPUT_FOLDER)
        if not output_files:
            return jsonify({"message": "No output generated by the model"}), 500

        # Return a success response with the output filenames
        return jsonify({"message": "Audio processed successfully!", "outputs": output_files}), 200

    except Exception as e:
        return jsonify({"message": str(e)}), 500

@app.route("/outputs/<filename>")  # Serve processed files for download
def download_file(filename):
    return send_from_directory(OUTPUT_FOLDER, filename)

if __name__ == "__main__":
    app.run(debug=True)

if __name__ == "__main__":
    app.run(debug=True, port=5001)  # Use a different port like 5001

    
app = Flask(__name__, template_folder="templates")

